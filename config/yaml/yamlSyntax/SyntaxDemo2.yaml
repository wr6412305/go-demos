# 使用 “|” 和文本内容缩进表示的块：保留块中已有的回车换行。相当于段落块
yaml: |      # 注意 ":" 与 "|" 之间的空格
  JSON的语法其实是YAML的子集，大部分的JSON文件都可以被YAML的解释器解释。
  如果你想更深入的学习YAML，我建议你去 http://www.yaml.org 看看

# 使用 “>” 和文本内容缩进表示的块：将块中回车替换为空格，最终连接成一行
yaml: >      # 注意 ":" 与 ">" 之间的空格，另外可以使用空行来分段落
  JSON的语法其实是YAML的子集，
  大部分的JSON文件都可以被YAML的解释器解释。
  如果你想更深入的学习YAML，我建议你去 http://www.yaml.org 看看

yaml:     # 使用回车的多行，最终连接成一行。
  JSON的语法其实是YAML的子集，
  大部分的JSON文件都可以被YAML的解释器解释。
yaml:     # 使用了双引号，双引号的好处是可以转义，即在里面可以使用特殊符号
  "JSON的语法其实是YAML的子集，
  大部分的JSON文件都可以被YAML的解释器解释。"

# +表示保留文字块末尾的换行，-表示删除字符串末尾的换行 
# { s1: 'Foo\n', s2: 'Foo\n\n\n', s3: 'Foo' }
s1: |
  Foo
s2: |+
  Foo 


s3: |-
  Foo

# YAML 允许使用个感叹号!，强制转换数据类型，单叹号通常是自定义类型，双叹号是内置类型
money: !!str
123
date: !Boolean
true